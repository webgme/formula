# Build a docker image for this repository
# 1. make sure docker is installed
# 2. make sure you have a clean copy of this repository
# 3. go to the directory where this file exists (the root of your repo)
# 4. $ docker build -t 4ml:latest -f ./MachineDockerfile .

# After successful startup, you should be able to connect to your dockerized webgme on the 8888 port of the host.
#
# Useful commands
# checking the status of your docker containers:    docker ps -a
# restart your docker container:                    docker restart {containerID/name}
# stop your container:                              docker stop {containerID/name}
# removing your container:                          docker rm {containerID/name}
# removing your image:                              docker rmi {imageID/name}
# list available images:                            docker images

# https://github.com/nodejs/docker-node/blob/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/6.9/Dockerfile
FROM node:boron
MAINTAINER Tamas Kecskes <tamas.kecskes@vanderbilt.edu>

RUN apt-get update

# Install git
RUN apt-get install -y git

RUN mkdir /usr/app

WORKDIR /usr/app

# copy app source
ADD . /usr/app/

# Install node-modules
RUN npm install webgme
RUN npm install

# Set environment variable in order to use ./config/config.docker.js
ENV NODE_ENV docker

EXPOSE 8001

CMD ["npm", "run", "start_machine"]

# to have a container named mongo, you can run the following:
# docker run -d -v ~/dockershare/db:/data/db --name mongo mongo
# to start properly you need the following run command:
# docker run -d --link mongo:mongo --name 4mlMachine ${IMAGE_NAME}
#